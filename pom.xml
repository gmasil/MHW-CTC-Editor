<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.gmasil</groupId>
	<artifactId>mhw-ctc-editor</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>MHW-CTC-Editor</name>
	<description>Editor for CTC files from Monster Hunter World to manipulate physical effects</description>

	<properties>
		<java.version>11</java.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- versions -->
		<javafx.version>11</javafx.version>
		<logback.version>1.2.3</logback.version>
		<commons.version>2.8.0</commons.version>
		<junit-jupiter.version>5.5.2</junit-jupiter.version>
		<junit-platform.version>1.5.2</junit-platform.version>
		<hamcrest.version>2.2</hamcrest.version>
		<mockito.version>3.2.0</mockito.version>
		<!-- plugin versions -->
		<surefire-plugin.version>2.22.2</surefire-plugin.version>
		<failsafe-plugin.version>2.22.2</failsafe-plugin.version>
		<jacoco-plugin.version>0.8.6</jacoco-plugin.version>
		<resources-plugin.version>3.2.0</resources-plugin.version>
		<assembly-plugin.version>3.3.0</assembly-plugin.version>
		<copy-rename-plugin.version>1.0.1</copy-rename-plugin.version>
		<!-- skip test config -->
		<skipITs>true</skipITs>
		<skip.surefire.tests>${skipTests}</skip.surefire.tests>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.version}</version>
		</dependency>
		<!-- jupiter -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit-jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit-jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>${junit-platform.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>${junit-platform.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- hamcrest -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- mockito -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>full-build</id>
			<properties>
				<skipITs>false</skipITs>
				<skip.surefire.tests>false</skip.surefire.tests>
			</properties>
		</profile>
		<profile>
			<id>integration-tests-only</id>
			<properties>
				<skipITs>false</skipITs>
				<skip.surefire.tests>true</skip.surefire.tests>
			</properties>
		</profile>
		<profile>
			<id>create-docs</id>
		</profile>
	</profiles>

	<build>
		<plugins>
			<!-- surefire -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
				<configuration>
					<skipTests>${skip.surefire.tests}</skipTests>
					<argLine>${argLine} -Xmx1024m -XX:MaxPermSize=256m</argLine>
				</configuration>
			</plugin>
			<!-- failsafe -->
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${failsafe-plugin.version}</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- jacoco -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-plugin.version}</version>
				<executions>
					<!-- unit tests -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco.exec</destFile>
						</configuration>
					</execution>
					<!-- integration tests -->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco-it.exec</destFile>
						</configuration>
					</execution>
					<!-- report -->
					<execution>
						<id>report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- copy starter file -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${resources-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-starter</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/release/</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources</directory>
									<includes>
										<include>MHW-CTC-Editor.cmd</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- build fat jar -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${assembly-plugin.version}</version><!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<archive>
						<manifest>
							<mainClass>de.gmasil.mhw.ctceditor.ui.CtcEditor</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- copy fat jar to release folder -->
			<plugin>
				<groupId>com.coderplus.maven.plugins</groupId>
				<artifactId>copy-rename-maven-plugin</artifactId>
				<version>${copy-rename-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-fat-jar</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<sourceFile>target/${project.artifactId}-${project.version}-jar-with-dependencies.jar</sourceFile>
							<destinationFile>target/release/${project.name}.jar</destinationFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<distributionManagement>
		<repository>
			<id>nexus</id>
			<url>https://nexus.gmasil.de/repository/maven-releases/</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<url>https://nexus.gmasil.de/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
</project>
